const vocationMapping={0:"Rookguard",1:"Sorcerer",2:"Druid",3:"Paladin",4:"Knight",5:"Master Sorcerer",6:"Elder Druid",7:"Royal Paladin",8:"Elite Knight"};let processedPlayers=[];document.addEventListener("DOMContentLoaded",(function(){function e(e,t){let n={};originalPlayers.forEach((e=>{n[e.account_id]||(n[e.account_id]=[]),n[e.account_id].push(e)}));let a=[];return Object.values(n).forEach((n=>{let o=null,d=null;n.forEach((n=>{let a=n.data.split(" ")[0];a===e&&(o=n),a===t&&(d=n)})),o&&d&&a.push({name:o.name,vocation:o.vocation,level_today:d.level,level_yesterday:o.level,experience_today:d.experience,experience_yesterday:o.experience,experienceDiff:d.experience-o.experience})})),a.sort(((e,t)=>t.experienceDiff-e.experienceDiff)),a}let t=1,n="all",a="";function o(){const n=document.getElementById("start-date"),a=document.getElementById("end-date"),o=n.value,d=a.value;o>=d||(processedPlayers=e(o,d),i(),t=1,l(t))}function d(){return processedPlayers.filter((e=>{const t="all"===n||vocationMapping[e.vocation]===n,o=e.name.toLowerCase().includes(a.toLowerCase());return t&&o}))}function l(e){const n=d(),a=40*(e-1),o=a+40,l=n.slice(a,o),i=document.getElementById("players-table");i.innerHTML='\n            <tr class="LabelH TextCenter">\n                <td>Name</td>\n                <td>Level</td>\n                <td>Experience</td>\n            </tr>\n        ',l.forEach(((e,t)=>{const n=t%2==0?"Even":"Odd",a=`/community/view/character/${encodeURIComponent(e.name)}`,o=e.level_today-e.level_yesterday;i.innerHTML+=`\n                <tr class="${n}">\n                    <td><a href="${a}">${e.name}</a> (${vocationMapping[e.vocation]})</td>\n                    <td>\n                        <div style="display: flex; width: 100%; justify-content: center; align-items: center;">\n                            <div style="flex: 1; border-right: 1px solid #faf0d7; text-align: center;">\n                                ${e.level_today}\n                            </div>\n                            <div style="flex: 1; text-align: center;">\n                                ${e.level_yesterday>0?`+${o}`:"0"}\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div class="flex-container">\n                            <div class="border-right">\n                                +${(e.experience_today-e.experience_yesterday).toLocaleString("pt-BR")}\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            `})),function(e){const n=Math.ceil(e/40),a=document.getElementById("pagination-links");a.innerHTML="";for(let e=1;e<=n;e++){const n=document.createElement("a");n.href="javascript:void(0);",n.innerText=e,n.classList.add("PageLink"),n.style.margin="0 2px",e===t&&(n.style.color="#5A2800",n.style.fontWeight="bold"),n.onclick=function(){changePage(e)},a.appendChild(n)}document.getElementById("total-results").innerText=e}(n.length)}function i(){const e=function(){const e={};return processedPlayers.forEach((t=>{const n=vocationMapping[t.vocation];e[n]?e[n]++:e[n]=1})),e}(),t=document.getElementById("profession");t.innerHTML="";const n=document.createElement("option");n.value="all",n.textContent=`All (${processedPlayers.length})`,t.appendChild(n),Object.keys(vocationMapping).forEach((n=>{const a=vocationMapping[n],o=e[a]||0,d=document.createElement("option");d.value=n,d.textContent=`${a} (${o})`,t.appendChild(d)})),t.value="all"}window.changePage=function(e){e>=1&&e<=Math.ceil(d().length/40)&&(t=e,l(e))},document.getElementById("start-date").addEventListener("change",o),document.getElementById("end-date").addEventListener("change",o),document.getElementById("profession").addEventListener("change",(function(){n="all"===this.value?"all":vocationMapping[parseInt(this.value)],t=1,l(t)})),document.getElementById("searchName").addEventListener("input",(function(){a=this.value,t=1,l(t)}));const c=document.getElementById("start-date").value,r=document.getElementById("end-date").value;function s(){const e=document.getElementById("start-date"),t=document.getElementById("end-date"),n=e.value,a=t.value;if(n&&a&&n>=a)if(alert("The 'To' date must be greater than the 'From' date."),t.dataset.previous)t.value=t.dataset.previous;else for(let e=0;e<t.options.length;e++){const a=t.options[e].value;if(a>n){t.value=a;break}}else t.dataset.previous=a}processedPlayers=e(c,r),i(),l(t),document.getElementById("start-date").addEventListener("change",s),document.getElementById("end-date").addEventListener("change",s)}));