let backupStartTime,backupTimerInterval;let backupIsRunning=false;let backupTimeElapsed=0;window.onload=function(){const savedNotes=localStorage.getItem("personalNotes");if(savedNotes){document.getElementById("notes").value=savedNotes}const savedBackupTime=localStorage.getItem("backupTimeElapsed");if(savedBackupTime){backupTimeElapsed=parseInt(savedBackupTime,10)}updateBackupTimerDisplay();const time=document.getElementById("timerDisplay").innerText;const[hours,minutes,seconds]=time.split(":").map((t=>parseInt(t,10)));timeElapsed=hours*3600+minutes*60+seconds};document.getElementById("notes").addEventListener("input",(function(){const notes=document.getElementById("notes").value;localStorage.setItem("personalNotes",notes)}));function startBackupTimer(){if(!backupIsRunning){backupStartTime=Date.now()-backupTimeElapsed*1e3;backupTimerInterval=setInterval((()=>{const elapsed=Date.now()-backupStartTime;backupTimeElapsed=Math.floor(elapsed/1e3);localStorage.setItem("backupTimeElapsed",backupTimeElapsed);updateBackupTimerDisplay()}),1e3);backupIsRunning=true}}function stopBackupTimer(){clearInterval(backupTimerInterval);backupIsRunning=false}function resetBackupTimer(){backupTimeElapsed=0;localStorage.setItem("backupTimeElapsed",backupTimeElapsed);updateBackupTimerDisplay()}function updateBackupTimerDisplay(){const hours=Math.floor(backupTimeElapsed/3600).toString().padStart(2,"0");const minutes=Math.floor(backupTimeElapsed%3600/60).toString().padStart(2,"0");const seconds=(backupTimeElapsed%60).toString().padStart(2,"0");const formattedTime=`${hours}:${minutes}:${seconds}`;document.getElementById("backupTimerDisplay").innerText=formattedTime}let startTime,timerInterval;let isTimerRunning=false;let timeElapsed=0;function startTimer(){const task=document.getElementById("task").value.trim();if(task===""){alert("Please enter a task before starting the timer.");return}updateStatus("online");const timerDisplayText=document.getElementById("timerDisplay").innerText.trim();const[hours,minutes,seconds]=timerDisplayText.split(":").map((t=>parseInt(t,10)));timeElapsed=hours*3600+minutes*60+seconds;const backupTimerDisplayText=document.getElementById("backupTimerDisplay").innerText.trim();const[backupHours,backupMinutes,backupSeconds]=backupTimerDisplayText.split(":").map((t=>parseInt(t,10)));backupTimeElapsed=backupHours*3600+backupMinutes*60+backupSeconds;if(!isTimerRunning){startTime=Date.now()-timeElapsed*1e3;document.getElementById("startButton").disabled=true;document.getElementById("stopButton").disabled=false;timerInterval=setInterval((()=>{const elapsed=Date.now()-startTime;const hours=Math.floor(elapsed/(1e3*60*60)%24).toString().padStart(2,"0");const minutes=Math.floor(elapsed/(1e3*60)%60).toString().padStart(2,"0");const seconds=Math.floor(elapsed/1e3%60).toString().padStart(2,"0");const formattedTime=`${hours}:${minutes}:${seconds}`;document.getElementById("timerDisplay").innerText=formattedTime;document.title=`Time Clock - ${formattedTime}`;document.getElementById("elapsedTime").value=formattedTime}),1e3);isTimerRunning=true;startBackupTimer()}}function stopTimer(){const task=document.getElementById("task").value.trim();if(task===""){alert("Please enter a task before stopping the timer.");return}clearInterval(timerInterval);updateStatus("offline");const elapsed=Math.floor((Date.now()-startTime)/1e3);timeElapsed=elapsed;const hours=Math.floor(timeElapsed/3600).toString().padStart(2,"0");const minutes=Math.floor(timeElapsed%3600/60).toString().padStart(2,"0");const seconds=(timeElapsed%60).toString().padStart(2,"0");const formattedTime=`${hours}:${minutes}:${seconds}`;document.getElementById("timerDisplay").innerText=formattedTime;document.getElementById("startButton").disabled=false;document.getElementById("stopButton").disabled=true;document.title="Employee Time Clock";isTimerRunning=false;stopBackupTimer()}document.getElementById("timeClockForm").addEventListener("submit",(function(){const timerDisplay=document.getElementById("timerDisplay").innerText.trim();document.getElementById("elapsedTime").value=timerDisplay}));function updateStatus(status){const employeeName=document.getElementById("employeeName").value;const task=document.getElementById("task").value.trim();fetch(UPDATE_STATUS_URL,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":CSRF_TOKEN},body:JSON.stringify({status:status,employeeName:employeeName,task:task})}).then((response=>response.json())).then((data=>{console.log("Status and task updated:",data)})).catch((error=>{console.error("Erro ao atualizar status e tarefa:",error)}))}